{
  "version": 3,
  "sources": ["../lzwcompress/lzwCompress.js", "dep:lzwcompress"],
  "sourcesContent": ["/*\n * lzwCompress.js\n *\n * Copyright (c) 2012-2021 floydpink\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n(function () {\n  const root = this;\n\n  const lzwCompress = (function (Array, JSON, undefined) {\n    let _lzwLoggingEnabled = false;\n    const _self = {},\n      _lzwLog = function (message) {\n        try {\n          console.log('lzwCompress: ' +\n            (new Date()).toISOString() + ' : ' + (typeof (message) === 'object' ? JSON.stringify(message) : message));\n        } catch (e) {\n        }\n      };\n\n    // KeyOptimize\n    // http://stackoverflow.com/questions/4433402/replace-keys-json-in-javascript\n    (function (self, Array, JSON) {\n\n      let _keys = [];\n      const comparer = function (key) {\n          return function (e) {\n            return e === key;\n          };\n        },\n        inArray = function (array, comparer) {\n          for (let i = 0; i < array.length; i++) {\n            if (comparer(array[i])) {\n              return true;\n            }\n          }\n          return false;\n        },\n        pushNew = function (array, element, comparer) {\n          if (!inArray(array, comparer)) {\n            array.push(element);\n          }\n        },\n        _extractKeys = function (obj) {\n          if (typeof obj === 'object') {\n            for (let key in obj) {\n              if (!Array.isArray(obj)) {\n                pushNew(_keys, key, comparer(key));\n              }\n              _extractKeys(obj[key]);\n            }\n          }\n        },\n        _encode = function (obj) {\n          if (typeof obj !== 'object') {\n            return obj;\n          }\n          for (let prop in obj) {\n            if (!Array.isArray(obj)) {\n              if (obj.hasOwnProperty(prop)) {\n                obj[_keys.indexOf(prop)] = _encode(obj[prop]);\n                delete obj[prop];\n              }\n            } else {\n              obj[prop] = _encode(obj[prop]);\n            }\n          }\n          return obj;\n        },\n        _decode = function (obj) {\n          if (typeof obj !== 'object') {\n            return obj;\n          }\n          for (let prop in obj) {\n            if (!Array.isArray(obj)) {\n              if (obj.hasOwnProperty(prop) && _keys[prop]) {\n                obj[_keys[prop]] = _decode(obj[prop]);\n                delete obj[prop];\n              }\n            } else {\n              obj[prop] = _decode(obj[prop]);\n            }\n          }\n          return obj;\n        },\n        compress = function (json) {\n          _keys = [];\n          const jsonObj = JSON.parse(json);\n          _extractKeys(jsonObj);\n          _lzwLoggingEnabled && _lzwLog('keys length : ' + _keys.length);\n          _lzwLoggingEnabled && _lzwLog('keys        : ' + _keys);\n          return JSON.stringify({__k : _keys, __v : _encode(jsonObj)});\n        },\n        decompress = function (minifiedJson) {\n          const obj = minifiedJson;\n          if (typeof (obj) !== 'object') {\n            return minifiedJson;\n          }\n          if (!obj.hasOwnProperty('__k')) {\n            return JSON.stringify(obj);\n          }\n          _keys = obj.__k;\n          return _decode(obj.__v);\n        };\n\n      self.KeyOptimize = {\n        pack   : compress,\n        unpack : decompress\n      };\n    }(_self, Array, JSON));\n\n    // LZWCompress\n    // http://stackoverflow.com/a/2252533/218882\n    // http://rosettacode.org/wiki/LZW_compression#JavaScript\n    (function (self, Array) {\n      const compress = function (uncompressed) {\n          if (typeof (uncompressed) !== 'string') {\n            return uncompressed;\n          }\n          let i;\n          const dictionary = Object.create(null);\n          let c,\n            wc,\n            w = '';\n          const result = [];\n          let dictSize = 256;\n          for (i = 0; i < 256; i += 1) {\n            dictionary[String.fromCharCode(i)] = i;\n          }\n          for (i = 0; i < uncompressed.length; i += 1) {\n            c = uncompressed.charAt(i);\n            wc = w + c;\n            if (dictionary[wc]) {\n              w = wc;\n            } else {\n              if (dictionary[w] === undefined) {\n                return uncompressed;\n              }\n              result.push(dictionary[w]);\n              dictionary[wc] = dictSize++;\n              w = String(c);\n            }\n          }\n          if (w !== '') {\n            result.push(dictionary[w]);\n          }\n          return result;\n        },\n        decompress = function (compressed) {\n          if (!Array.isArray(compressed)) {\n            return compressed;\n          }\n          let i;\n          const dictionary = [];\n          let w,\n            result,\n            k,\n            entry = '',\n            dictSize = 256;\n          for (i = 0; i < 256; i += 1) {\n            dictionary[i] = String.fromCharCode(i);\n          }\n          w = String.fromCharCode(compressed[0]);\n          result = w;\n          for (i = 1; i < compressed.length; i += 1) {\n            k = compressed[i];\n            if (dictionary[k]) {\n              entry = dictionary[k];\n            } else {\n              if (k === dictSize) {\n                entry = w + w.charAt(0);\n              } else {\n                return null;\n              }\n            }\n            result += entry;\n            dictionary[dictSize++] = w + entry.charAt(0);\n            w = entry;\n          }\n          return result;\n        };\n\n      self.LZWCompress = {\n        pack   : compress,\n        unpack : decompress\n      };\n    }(_self, Array));\n\n    const _compress = function (obj) {\n        _lzwLoggingEnabled && _lzwLog('original (uncompressed) : ' + obj);\n        if (!obj || obj === true || obj instanceof Date) {\n          return obj;\n        }\n        let result = obj;\n        if (typeof obj === 'object') {\n          result = _self.KeyOptimize.pack(JSON.stringify(obj));\n          _lzwLoggingEnabled && _lzwLog('key optimized: ' + result);\n        }\n        const packedObj = _self.LZWCompress.pack(result);\n        _lzwLoggingEnabled && _lzwLog('packed   (compressed)   : ' + packedObj);\n        return packedObj;\n      },\n      _decompress = function (compressedObj) {\n        _lzwLoggingEnabled && _lzwLog('original (compressed)   : ' + compressedObj);\n        if (!compressedObj || compressedObj === true || compressedObj instanceof Date) {\n          return compressedObj;\n        }\n        let probableJSON, result = _self.LZWCompress.unpack(compressedObj);\n        try {\n          probableJSON = JSON.parse(result);\n        } catch (e) {\n          _lzwLoggingEnabled && _lzwLog('unpacked (uncompressed) : ' + result);\n          return result;\n        }\n        if (typeof probableJSON === 'object') {\n          result = _self.KeyOptimize.unpack(probableJSON);\n        }\n        _lzwLoggingEnabled && _lzwLog('unpacked (uncompressed) : ' + result);\n        return result;\n      },\n      _enableLogging = function (enable) {\n        _lzwLoggingEnabled = enable;\n      };\n\n    return {\n      pack          : _compress,\n      unpack        : _decompress,\n      enableLogging : _enableLogging\n    };\n\n  })(Array, JSON);\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = lzwCompress;\n  } else {\n    root.lzwCompress = lzwCompress;\n  }\n\n}).call(this);\n", "export default require(\"./node_modules/lzwcompress/lzwCompress.js\");"],
  "mappings": "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",
  "names": []
}
