{"version":3,"file":"main.16fa74baec764623f4d2.hot-update.js","sources":["webpack:///./.storybook/Globals.svelte","webpack:///./src/lib/Card.svelte","webpack:///./src/lib/Trigger.svelte","webpack:///./src/lib/TriggerSet.svelte","webpack:///./src/stories/Button.stories.svelte","webpack:///./src/stories/Button.svelte","webpack:///./src/stories/Card.stories.svelte","webpack:///./src/stories/Header.stories.svelte","webpack:///./src/stories/Header.svelte","webpack:///./src/stories/Page.stories.svelte","webpack:///./src/stories/Page.svelte","webpack:///./src/stories/Trigger.stories.svelte","webpack:///./src/stories/TriggerSet.stories.svelte"],"sourcesContent":["/* .storybook/Globals.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tcreate_slot,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out,\n\tupdate_slot\n} from \"svelte/internal\";\n\nimport \"../public/global.css\";\n\nfunction add_css() {\n\tvar style = element(\"style\");\n\tstyle.id = \"svelte-14dvlq3-style\";\n\tstyle.textContent = \"*, *:before, *:after{box-sizing:border-box}\";\n\tappend(document.head, style);\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"$$scope\" in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass Globals extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!document.getElementById(\"svelte-14dvlq3-style\")) add_css();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default Globals;\nGlobals.__docgen = {\"version\":3,\"name\":\"Globals.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[{\"keywords\":[],\"visibility\":\"public\",\"description\":\"\",\"name\":\"default\"}],\"refs\":[]};","/* src/lib/Card.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tadd_render_callback,\n\tappend,\n\tattr,\n\tcreate_bidirectional_transition,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tsafe_not_equal,\n\tset_data,\n\ttext as text_1\n} from \"svelte/internal\";\n\nimport { fly, fade } from \"svelte/transition\";\n\nfunction add_css() {\n\tvar style = element(\"style\");\n\tstyle.id = \"svelte-18vjcq1-style\";\n\tstyle.textContent = \".card.svelte-18vjcq1{width:var(--width);height:240px;background:white;border-radius:var(--radius);transition:transform 150ms ease-out, box-shadow 150ms ease-out, width 150ms;box-shadow:-10px -10px 36px #fff5, 10px 10px 36px #0001;position:relative;display:flex;align-items:center;justify-content:center;padding:24px}.card.svelte-18vjcq1:hover{transform:scale(1.05);box-shadow:10px 10px 100px #00000001;z-index:1}h2.svelte-18vjcq1{margin:0}\";\n\tappend(document.head, style);\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet h2;\n\tlet t;\n\tlet div_transition;\n\tlet current;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\th2 = element(\"h2\");\n\t\t\tt = text_1(/*text*/ ctx[0]);\n\t\t\tattr(h2, \"class\", \"svelte-18vjcq1\");\n\t\t\tattr(div, \"class\", \"card svelte-18vjcq1\");\n\t\t\tattr(div, \"style\", /*style*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, h2);\n\t\t\tappend(h2, t);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (!current || dirty & /*text*/ 1) set_data(t, /*text*/ ctx[0]);\n\n\t\t\tif (!current || dirty & /*style*/ 2) {\n\t\t\t\tattr(div, \"style\", /*style*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!div_transition) div_transition = create_bidirectional_transition(div, fly, { y: 100, duration: 100 }, true);\n\t\t\t\tdiv_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (!div_transition) div_transition = create_bidirectional_transition(div, fly, { y: 100, duration: 100 }, false);\n\t\t\tdiv_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (detaching && div_transition) div_transition.end();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet style;\n\tlet { text = \"hello\" } = $$props;\n\tlet { width = 240 } = $$props;\n\tlet { radius = 32 } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"text\" in $$props) $$invalidate(0, text = $$props.text);\n\t\tif (\"width\" in $$props) $$invalidate(2, width = $$props.width);\n\t\tif (\"radius\" in $$props) $$invalidate(3, radius = $$props.radius);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*width, radius*/ 12) {\n\t\t\t$: $$invalidate(1, style = `--width: ${width}px; --radius: ${radius}px`);\n\t\t}\n\t};\n\n\treturn [text, style, width, radius];\n}\n\nclass Card extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!document.getElementById(\"svelte-18vjcq1-style\")) add_css();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { text: 0, width: 2, radius: 3 });\n\t}\n}\n\nexport default Card;\nCard.__docgen = {\"version\":3,\"name\":\"Card.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"text\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"string\",\"type\":\"string\"},\"defaultValue\":\"hello\"},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"width\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"number\",\"type\":\"number\"},\"defaultValue\":240},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"radius\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"number\",\"type\":\"number\"},\"defaultValue\":32}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};","/* src/lib/Trigger.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tnoop,\n\tnull_to_empty,\n\tsafe_not_equal\n} from \"svelte/internal\";\n\nfunction add_css() {\n\tvar style = element(\"style\");\n\tstyle.id = \"svelte-1s4madb-style\";\n\tstyle.textContent = \".outer.svelte-1s4madb.svelte-1s4madb{width:72px;height:72px;display:flex;align-items:center;justify-content:center;background:#fff}.inner.svelte-1s4madb.svelte-1s4madb{height:24px;width:24px;background:var(--bg-color);border-radius:50%;transition:background-color 75ms}.on.svelte-1s4madb .inner.svelte-1s4madb{background:rgb(211, 165, 165)}.active.svelte-1s4madb .inner.svelte-1s4madb{background:#ff0}.dominant.svelte-1s4madb .inner.svelte-1s4madb{width:32px;height:32px}\";\n\tappend(document.head, style);\n}\n\nfunction create_fragment(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet div1_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"inner svelte-1s4madb\");\n\t\t\tattr(div1, \"class\", div1_class_value = \"\" + (null_to_empty(/*classList*/ ctx[0]) + \" svelte-1s4madb\"));\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(div1, \"click\", /*handleClick*/ ctx[1]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*classList*/ 1 && div1_class_value !== (div1_class_value = \"\" + (null_to_empty(/*classList*/ ctx[0]) + \" svelte-1s4madb\"))) {\n\t\t\t\tattr(div1, \"class\", div1_class_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet classList;\n\tlet { active = false } = $$props;\n\tlet { on = false } = $$props;\n\tlet { dominant = false } = $$props;\n\n\tconst handleClick = () => {\n\t\t$$invalidate(2, on = !on);\n\t\tconsole.log(on);\n\t};\n\n\t$$self.$$set = $$props => {\n\t\tif (\"active\" in $$props) $$invalidate(3, active = $$props.active);\n\t\tif (\"on\" in $$props) $$invalidate(2, on = $$props.on);\n\t\tif (\"dominant\" in $$props) $$invalidate(4, dominant = $$props.dominant);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*on, active, dominant*/ 28) {\n\t\t\t$: $$invalidate(0, classList = [\n\t\t\t\t\"outer\",\n\t\t\t\ton ? \"on\" : \"\",\n\t\t\t\tactive ? \"active\" : \"\",\n\t\t\t\tdominant ? \"dominant\" : \"\"\n\t\t\t].join(\" \"));\n\t\t}\n\t};\n\n\treturn [classList, handleClick, on, active, dominant];\n}\n\nclass Trigger extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!document.getElementById(\"svelte-1s4madb-style\")) add_css();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { active: 3, on: 2, dominant: 4 });\n\t}\n}\n\nexport default Trigger;\nTrigger.__docgen = {\"version\":3,\"name\":\"Trigger.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"active\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"on\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"dominant\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};","/* src/lib/TriggerSet.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tcheck_outros,\n\tcreate_component,\n\tdestroy_component,\n\tdestroy_each,\n\tdetach,\n\tempty,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport Trigger from \"./Trigger.svelte\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[1] = list[i];\n\treturn child_ctx;\n}\n\n// (7:0) {#each states as state}\nfunction create_each_block(ctx) {\n\tlet trigger;\n\tlet current;\n\ttrigger = new Trigger({ props: { on: /*state*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(trigger.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(trigger, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst trigger_changes = {};\n\t\t\tif (dirty & /*states*/ 1) trigger_changes.on = /*state*/ ctx[1];\n\t\t\ttrigger.$set(trigger_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(trigger.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(trigger.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(trigger, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = /*states*/ ctx[0];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*states*/ 1) {\n\t\t\t\teach_value = /*states*/ ctx[0];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { states = Array(16).fill(false) } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"states\" in $$props) $$invalidate(0, states = $$props.states);\n\t};\n\n\treturn [states];\n}\n\nclass TriggerSet extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { states: 0 });\n\t}\n}\n\nexport default TriggerSet;\nTriggerSet.__docgen = {\"version\":3,\"name\":\"TriggerSet.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"states\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};","/* src/stories/Button.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tis_function,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport Button from \"./Button.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet button;\n\tlet current;\n\tconst button_spread_levels = [/*args*/ ctx[0]];\n\tlet button_props = {};\n\n\tfor (let i = 0; i < button_spread_levels.length; i += 1) {\n\t\tbutton_props = assign(button_props, button_spread_levels[i]);\n\t}\n\n\tbutton = new Button({ props: button_props });\n\n\tbutton.$on(\"click\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onClick)) /*args*/ ctx[0].onClick.apply(this, arguments);\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(button.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(button, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tconst button_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(button_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\tbutton.$set(button_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(button, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story0;\n\tlet t2;\n\tlet story1;\n\tlet t3;\n\tlet story2;\n\tlet t4;\n\tlet story3;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"Example/Button\",\n\t\t\t\tcomponent: Button,\n\t\t\t\targTypes: {\n\t\t\t\t\tlabel: { control: \"text\" },\n\t\t\t\t\tprimary: { control: \"boolean\" },\n\t\t\t\t\tbackgroundColor: { control: \"color\" },\n\t\t\t\t\tsize: {\n\t\t\t\t\t\tcontrol: {\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\toptions: [\"small\", \"medium\", \"large\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonClick: { action: \"onClick\" }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory0 = new Story({\n\t\t\tprops: {\n\t\t\t\tname: \"Primary\",\n\t\t\t\targs: { primary: true, label: \"Button\" }\n\t\t\t}\n\t\t});\n\n\tstory1 = new Story({\n\t\t\tprops: {\n\t\t\t\tname: \"Secondary\",\n\t\t\t\targs: { label: \"Button\" }\n\t\t\t}\n\t\t});\n\n\tstory2 = new Story({\n\t\t\tprops: {\n\t\t\t\tname: \"Large\",\n\t\t\t\targs: { size: \"large\", label: \"Button\" }\n\t\t\t}\n\t\t});\n\n\tstory3 = new Story({\n\t\t\tprops: {\n\t\t\t\tname: \"Small\",\n\t\t\t\targs: { size: \"small\", label: \"Button\" }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(story1.$$.fragment);\n\t\t\tt3 = space();\n\t\t\tcreate_component(story2.$$.fragment);\n\t\t\tt4 = space();\n\t\t\tcreate_component(story3.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(story1, target, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t\tmount_component(story2, target, anchor);\n\t\t\tinsert(target, t4, anchor);\n\t\t\tmount_component(story3, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story0.$$.fragment, local);\n\t\t\ttransition_in(story1.$$.fragment, local);\n\t\t\ttransition_in(story2.$$.fragment, local);\n\t\t\ttransition_in(story3.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story0.$$.fragment, local);\n\t\t\ttransition_out(story1.$$.fragment, local);\n\t\t\ttransition_out(story2.$$.fragment, local);\n\t\t\ttransition_out(story3.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(story1, detaching);\n\t\t\tif (detaching) detach(t3);\n\t\t\tdestroy_component(story2, detaching);\n\t\t\tif (detaching) detach(t4);\n\t\t\tdestroy_component(story3, detaching);\n\t\t}\n\t};\n}\n\nclass Button_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultButton_stories;\nButton_stories.__docgen = {\"version\":3,\"name\":\"Button.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(Button_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Button {...args} on:click={args.onClick} />\",\"hasArgs\":true},\"Primary\":{\"name\":\"Primary\",\"template\":false,\"hasArgs\":false},\"Secondary\":{\"name\":\"Secondary\",\"template\":false,\"hasArgs\":false},\"Large\":{\"name\":\"Large\",\"template\":false,\"hasArgs\":false},\"Small\":{\"name\":\"Small\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const Primary = __storiesMetaData.stories[\"Primary\"]\nexport const Secondary = __storiesMetaData.stories[\"Secondary\"]\nexport const Large = __storiesMetaData.stories[\"Large\"]\nexport const Small = __storiesMetaData.stories[\"Small\"];","/* src/stories/Button.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\ttext\n} from \"svelte/internal\";\n\nimport \"./button.css\";\nimport { createEventDispatcher } from \"svelte\";\n\nfunction create_fragment(ctx) {\n\tlet button;\n\tlet t;\n\tlet button_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tt = text(/*label*/ ctx[1]);\n\t\t\tattr(button, \"type\", \"button\");\n\n\t\t\tattr(button, \"class\", button_class_value = [\n\t\t\t\t\"storybook-button\",\n\t\t\t\t`storybook-button--${/*size*/ ctx[0]}`,\n\t\t\t\t/*mode*/ ctx[2]\n\t\t\t].join(\" \"));\n\n\t\t\tattr(button, \"style\", /*style*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, t);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*onClick*/ ctx[4]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*label*/ 2) set_data(t, /*label*/ ctx[1]);\n\n\t\t\tif (dirty & /*size*/ 1 && button_class_value !== (button_class_value = [\n\t\t\t\t\"storybook-button\",\n\t\t\t\t`storybook-button--${/*size*/ ctx[0]}`,\n\t\t\t\t/*mode*/ ctx[2]\n\t\t\t].join(\" \"))) {\n\t\t\t\tattr(button, \"class\", button_class_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { primary = false } = $$props;\n\tlet { backgroundColor } = $$props;\n\tlet { size = \"medium\" } = $$props;\n\tlet { label = \"\" } = $$props;\n\n\tlet mode = primary\n\t? \"storybook-button--primary\"\n\t: \"storybook-button--secondary\";\n\n\tlet style = backgroundColor\n\t? `background-color: ${backgroundColor}`\n\t: \"\";\n\n\tconst dispatch = createEventDispatcher();\n\n\t/**\n * Optional click handler\n */\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"primary\" in $$props) $$invalidate(5, primary = $$props.primary);\n\t\tif (\"backgroundColor\" in $$props) $$invalidate(6, backgroundColor = $$props.backgroundColor);\n\t\tif (\"size\" in $$props) $$invalidate(0, size = $$props.size);\n\t\tif (\"label\" in $$props) $$invalidate(1, label = $$props.label);\n\t};\n\n\treturn [size, label, mode, style, onClick, primary, backgroundColor];\n}\n\nclass Button extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\tprimary: 5,\n\t\t\tbackgroundColor: 6,\n\t\t\tsize: 0,\n\t\t\tlabel: 1\n\t\t});\n\t}\n}\n\nexport default Button;\nButton.__docgen = {\"version\":3,\"name\":\"Button.svelte\",\"data\":[{\"keywords\":[],\"visibility\":\"public\",\"description\":\"Is this the principal call to action on the page?\",\"name\":\"primary\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false},{\"keywords\":[],\"visibility\":\"public\",\"description\":\"What background color to use\",\"name\":\"backgroundColor\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}},{\"keywords\":[],\"visibility\":\"public\",\"description\":\"How large should the button be?\",\"name\":\"size\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"string\",\"type\":\"string\"},\"defaultValue\":\"medium\"},{\"keywords\":[],\"visibility\":\"public\",\"description\":\"Button contents\",\"name\":\"label\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"string\",\"type\":\"string\"},\"defaultValue\":\"\"}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"click\"}],\"slots\":[],\"refs\":[]};","/* src/stories/Card.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport Card from \"./../lib/Card.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet card;\n\tlet current;\n\tconst card_spread_levels = [/*args*/ ctx[0]];\n\tlet card_props = {};\n\n\tfor (let i = 0; i < card_spread_levels.length; i += 1) {\n\t\tcard_props = assign(card_props, card_spread_levels[i]);\n\t}\n\n\tcard = new Card({ props: card_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(card.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(card, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst card_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(card_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\tcard.$set(card_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(card.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(card.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(card, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"Card\",\n\t\t\t\tcomponent: Card,\n\t\t\t\targTypes: {\n\t\t\t\t\ttext: { control: \"text\" },\n\t\t\t\t\twidth: {\n\t\t\t\t\t\tcontrol: {\n\t\t\t\t\t\t\ttype: \"range\",\n\t\t\t\t\t\t\tmin: 240,\n\t\t\t\t\t\t\tmax: 500,\n\t\t\t\t\t\t\tstep: 10\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tradius: {\n\t\t\t\t\t\tcontrol: { type: \"range\", min: 0, max: 64, step: 1 }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory = new Story({\n\t\t\tprops: { name: \"Hello\", args: { text: \"hah\" } }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story, detaching);\n\t\t}\n\t};\n}\n\nclass Card_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultCard_stories;\nCard_stories.__docgen = {\"version\":3,\"name\":\"Card.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(Card_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Card {...args} />\",\"hasArgs\":true},\"Hello\":{\"name\":\"Hello\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const Hello = __storiesMetaData.stories[\"Hello\"];","/* src/stories/Header.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tis_function,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport Header from \"./Header.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet header;\n\tlet current;\n\tconst header_spread_levels = [/*args*/ ctx[0]];\n\tlet header_props = {};\n\n\tfor (let i = 0; i < header_spread_levels.length; i += 1) {\n\t\theader_props = assign(header_props, header_spread_levels[i]);\n\t}\n\n\theader = new Header({ props: header_props });\n\n\theader.$on(\"login\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onLogin)) /*args*/ ctx[0].onLogin.apply(this, arguments);\n\t});\n\n\theader.$on(\"logout\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onLogout)) /*args*/ ctx[0].onLogout.apply(this, arguments);\n\t});\n\n\theader.$on(\"createAccount\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onCreateAccount)) /*args*/ ctx[0].onCreateAccount.apply(this, arguments);\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(header.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(header, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tconst header_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(header_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\theader.$set(header_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(header.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(header.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(header, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story0;\n\tlet t2;\n\tlet story1;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"Example/Header\",\n\t\t\t\tcomponent: Header,\n\t\t\t\targTypes: {\n\t\t\t\t\tonLogin: { action: \"onLogin\" },\n\t\t\t\t\tonLogout: { action: \"onLogout\" },\n\t\t\t\t\tonCreateAccount: { action: \"onCreateAccount\" }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory0 = new Story({\n\t\t\tprops: { name: \"LoggedIn\", args: { user: {} } }\n\t\t});\n\n\tstory1 = new Story({ props: { name: \"LoggedOut\", args: {} } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(story1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(story1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story0.$$.fragment, local);\n\t\t\ttransition_in(story1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story0.$$.fragment, local);\n\t\t\ttransition_out(story1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(story1, detaching);\n\t\t}\n\t};\n}\n\nclass Header_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultHeader_stories;\nHeader_stories.__docgen = {\"version\":3,\"name\":\"Header.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(Header_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Header\\n  {...args}\\n  on:login={args.onLogin}\\n  on:logout={args.onLogout}\\n  on:createAccount={args.onCreateAccount}\\n/>\",\"hasArgs\":true},\"LoggedIn\":{\"name\":\"LoggedIn\",\"template\":false,\"hasArgs\":false},\"LoggedOut\":{\"name\":\"LoggedOut\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const LoggedIn = __storiesMetaData.stories[\"LoggedIn\"]\nexport const LoggedOut = __storiesMetaData.stories[\"LoggedOut\"];","/* src/stories/Header.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcheck_outros,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tnoop,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport \"./header.css\";\nimport Button from \"./Button.svelte\";\nimport { createEventDispatcher } from \"svelte\";\n\nfunction create_if_block_1(ctx) {\n\tlet button;\n\tlet current;\n\n\tbutton = new Button({\n\t\t\tprops: { size: \"small\", label: \"Log out\" }\n\t\t});\n\n\tbutton.$on(\"click\", /*onLogout*/ ctx[2]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(button.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(button, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(button, detaching);\n\t\t}\n\t};\n}\n\n// (42:6) {#if !user}\nfunction create_if_block(ctx) {\n\tlet button0;\n\tlet t;\n\tlet button1;\n\tlet current;\n\n\tbutton0 = new Button({\n\t\t\tprops: { size: \"small\", label: \"Log in\" }\n\t\t});\n\n\tbutton0.$on(\"click\", /*onLogin*/ ctx[1]);\n\n\tbutton1 = new Button({\n\t\t\tprops: {\n\t\t\t\tprimary: true,\n\t\t\t\tsize: \"small\",\n\t\t\t\tlabel: \"Sign up\"\n\t\t\t}\n\t\t});\n\n\tbutton1.$on(\"click\", /*onCreateAccount*/ ctx[3]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(button0.$$.fragment);\n\t\t\tt = space();\n\t\t\tcreate_component(button1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(button0, target, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tmount_component(button1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button0.$$.fragment, local);\n\t\t\ttransition_in(button1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button0.$$.fragment, local);\n\t\t\ttransition_out(button1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(button0, detaching);\n\t\t\tif (detaching) detach(t);\n\t\t\tdestroy_component(button1, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet header;\n\tlet div2;\n\tlet div0;\n\tlet t2;\n\tlet div1;\n\tlet t3;\n\tlet current;\n\tlet if_block0 = /*user*/ ctx[0] && create_if_block_1(ctx);\n\tlet if_block1 = !/*user*/ ctx[0] && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\theader = element(\"header\");\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\n\t\t\tdiv0.innerHTML = `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillrule=\"evenodd\"><path d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\" fill=\"#FFF\"></path><path d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\" fill=\"#555AB9\"></path><path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\"></path></g></svg> \n      <h1>Acme</h1>`;\n\n\t\t\tt2 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt3 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(div2, \"class\", \"wrapper\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, header, anchor);\n\t\t\tappend(header, div2);\n\t\t\tappend(div2, div0);\n\t\t\tappend(div2, t2);\n\t\t\tappend(div2, div1);\n\t\t\tif (if_block0) if_block0.m(div1, null);\n\t\t\tappend(div1, t3);\n\t\t\tif (if_block1) if_block1.m(div1, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*user*/ ctx[0]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*user*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div1, t3);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (!/*user*/ ctx[0]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*user*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div1, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(header);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { user = null } = $$props;\n\tconst dispatch = createEventDispatcher();\n\n\tfunction onLogin(event) {\n\t\tdispatch(\"login\", event);\n\t}\n\n\tfunction onLogout(event) {\n\t\tdispatch(\"logout\", event);\n\t}\n\n\tfunction onCreateAccount(event) {\n\t\tdispatch(\"createAccount\", event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"user\" in $$props) $$invalidate(0, user = $$props.user);\n\t};\n\n\treturn [user, onLogin, onLogout, onCreateAccount];\n}\n\nclass Header extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { user: 0 });\n\t}\n}\n\nexport default Header;\nHeader.__docgen = {\"version\":3,\"name\":\"Header.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"user\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"object\",\"type\":\"object\"},\"defaultValue\":null}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"login\"},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"logout\"},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"createAccount\"}],\"slots\":[],\"refs\":[]};","/* src/stories/Page.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tis_function,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport Page from \"./Page.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet page;\n\tlet current;\n\tconst page_spread_levels = [/*args*/ ctx[0]];\n\tlet page_props = {};\n\n\tfor (let i = 0; i < page_spread_levels.length; i += 1) {\n\t\tpage_props = assign(page_props, page_spread_levels[i]);\n\t}\n\n\tpage = new Page({ props: page_props });\n\n\tpage.$on(\"login\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onLogin)) /*args*/ ctx[0].onLogin.apply(this, arguments);\n\t});\n\n\tpage.$on(\"logout\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onLogout)) /*args*/ ctx[0].onLogout.apply(this, arguments);\n\t});\n\n\tpage.$on(\"createAccount\", function () {\n\t\tif (is_function(/*args*/ ctx[0].onCreateAccount)) /*args*/ ctx[0].onCreateAccount.apply(this, arguments);\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(page.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(page, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tconst page_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(page_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\tpage.$set(page_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(page.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(page.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(page, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story0;\n\tlet t2;\n\tlet story1;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"Example/Page\",\n\t\t\t\tcomponent: Page,\n\t\t\t\targTypes: {\n\t\t\t\t\tonLogin: { action: \"onLogin\" },\n\t\t\t\t\tonLogout: { action: \"onLogout\" },\n\t\t\t\t\tonCreateAccount: { action: \"onCreateAccount\" }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory0 = new Story({\n\t\t\tprops: { name: \"LoggedIn\", args: { user: {} } }\n\t\t});\n\n\tstory1 = new Story({ props: { name: \"LoggedOut\", args: {} } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(story1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(story1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story0.$$.fragment, local);\n\t\t\ttransition_in(story1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story0.$$.fragment, local);\n\t\t\ttransition_out(story1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(story1, detaching);\n\t\t}\n\t};\n}\n\nclass Page_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultPage_stories;\nPage_stories.__docgen = {\"version\":3,\"name\":\"Page.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(Page_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Page\\n  {...args}\\n  on:login={args.onLogin}\\n  on:logout={args.onLogout}\\n  on:createAccount={args.onCreateAccount}\\n/>\",\"hasArgs\":true},\"LoggedIn\":{\"name\":\"LoggedIn\",\"template\":false,\"hasArgs\":false},\"LoggedOut\":{\"name\":\"LoggedOut\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const LoggedIn = __storiesMetaData.stories[\"LoggedIn\"]\nexport const LoggedOut = __storiesMetaData.stories[\"LoggedOut\"];","/* src/stories/Page.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport \"./page.css\";\nimport Header from \"./Header.svelte\";\nimport { createEventDispatcher } from \"svelte\";\n\nfunction create_fragment(ctx) {\n\tlet article;\n\tlet header;\n\tlet t0;\n\tlet section;\n\tlet current;\n\theader = new Header({ props: { user: /*user*/ ctx[0] } });\n\theader.$on(\"login\", /*onLogin*/ ctx[1]);\n\theader.$on(\"logout\", /*onLogout*/ ctx[2]);\n\theader.$on(\"createAccount\", /*onCreateAccount*/ ctx[3]);\n\n\treturn {\n\t\tc() {\n\t\t\tarticle = element(\"article\");\n\t\t\tcreate_component(header.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tsection = element(\"section\");\n\n\t\t\tsection.innerHTML = `<h2>Pages in Storybook</h2> \n    <p>We recommend building UIs with a\n      <a href=\"https://blog.hichroma.com/component-driven-development-ce1109d56c8e\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>component-driven</strong></a>\n      process starting with atomic components and ending with pages.</p> \n    <p>Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:</p> \n    <ul><li>Use a higher-level connected component. Storybook helps you compose such data from the\n        &quot;args&quot; of child component stories</li> \n      <li>Assemble data in the page component from your services. You can mock these services out\n        using Storybook.</li></ul> \n    <p>Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">Storybook tutorials</a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">docs</a>\n      .</p> \n    <div class=\"tip-wrapper\"><span class=\"tip\">Tip</span>\n      Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillrule=\"evenodd\"><path d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0\n            01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0\n            010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\" id=\"a\" fill=\"#999\"></path></g></svg>\n      Viewports addon in the toolbar</div>`;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, article, anchor);\n\t\t\tmount_component(header, article, null);\n\t\t\tappend(article, t0);\n\t\t\tappend(article, section);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst header_changes = {};\n\t\t\tif (dirty & /*user*/ 1) header_changes.user = /*user*/ ctx[0];\n\t\t\theader.$set(header_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(header.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(header.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(article);\n\t\t\tdestroy_component(header);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { user = null } = $$props;\n\tconst dispatch = createEventDispatcher();\n\n\tfunction onLogin(event) {\n\t\tdispatch(\"login\", event);\n\t}\n\n\tfunction onLogout(event) {\n\t\tdispatch(\"logout\", event);\n\t}\n\n\tfunction onCreateAccount(event) {\n\t\tdispatch(\"createAccount\", event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"user\" in $$props) $$invalidate(0, user = $$props.user);\n\t};\n\n\treturn [user, onLogin, onLogout, onCreateAccount];\n}\n\nclass Page extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { user: 0 });\n\t}\n}\n\nexport default Page;\nPage.__docgen = {\"version\":3,\"name\":\"Page.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"user\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"object\",\"type\":\"object\"},\"defaultValue\":null}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"login\"},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"logout\"},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"createAccount\"}],\"slots\":[],\"refs\":[]};","/* src/stories/Trigger.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport Trigger from \"./../lib/Trigger.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet trigger;\n\tlet current;\n\tconst trigger_spread_levels = [/*args*/ ctx[0]];\n\tlet trigger_props = {};\n\n\tfor (let i = 0; i < trigger_spread_levels.length; i += 1) {\n\t\ttrigger_props = assign(trigger_props, trigger_spread_levels[i]);\n\t}\n\n\ttrigger = new Trigger({ props: trigger_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(trigger.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(trigger, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst trigger_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(trigger_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\ttrigger.$set(trigger_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(trigger.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(trigger.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(trigger, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story0;\n\tlet t2;\n\tlet story1;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"Trigger\",\n\t\t\t\tcomponent: Trigger,\n\t\t\t\targTypes: {\n\t\t\t\t\ton: { control: \"boolean\" },\n\t\t\t\t\tactive: { control: \"boolean\" }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory0 = new Story({ props: { name: \"Default\" } });\n\n\tstory1 = new Story({\n\t\t\tprops: { name: \"Active\", args: { active: true } }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(story1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(story1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story0.$$.fragment, local);\n\t\t\ttransition_in(story1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story0.$$.fragment, local);\n\t\t\ttransition_out(story1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(story1, detaching);\n\t\t}\n\t};\n}\n\nclass Trigger_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultTrigger_stories;\nTrigger_stories.__docgen = {\"version\":3,\"name\":\"Trigger.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(Trigger_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Trigger {...args} />\",\"hasArgs\":true},\"Default\":{\"name\":\"Default\",\"template\":false,\"hasArgs\":false},\"Active\":{\"name\":\"Active\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const Default = __storiesMetaData.stories[\"Default\"]\nexport const Active = __storiesMetaData.stories[\"Active\"];","/* src/stories/TriggerSet.stories.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tassign,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tget_spread_object,\n\tget_spread_update,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\nimport TriggerSet from \"./../lib/TriggerSet.svelte\";\n\nfunction create_default_slot(ctx) {\n\tlet trigger;\n\tlet current;\n\tconst trigger_spread_levels = [/*args*/ ctx[0]];\n\tlet trigger_props = {};\n\n\tfor (let i = 0; i < trigger_spread_levels.length; i += 1) {\n\t\ttrigger_props = assign(trigger_props, trigger_spread_levels[i]);\n\t}\n\n\ttrigger = new Trigger({ props: trigger_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(trigger.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(trigger, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst trigger_changes = (dirty & /*args*/ 1)\n\t\t\t? get_spread_update(trigger_spread_levels, [get_spread_object(/*args*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\ttrigger.$set(trigger_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(trigger.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(trigger.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(trigger, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet meta;\n\tlet t0;\n\tlet template;\n\tlet t1;\n\tlet story0;\n\tlet t2;\n\tlet story1;\n\tlet current;\n\n\tmeta = new Meta({\n\t\t\tprops: {\n\t\t\t\ttitle: \"TriggerSet\",\n\t\t\t\tcomponent: TriggerSet\n\t\t\t}\n\t\t});\n\n\ttemplate = new Template({\n\t\t\tprops: {\n\t\t\t\t$$slots: {\n\t\t\t\t\tdefault: [\n\t\t\t\t\t\tcreate_default_slot,\n\t\t\t\t\t\t({ args }) => ({ 0: args }),\n\t\t\t\t\t\t({ args }) => args ? 1 : 0\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tstory0 = new Story({ props: { name: \"Default\" } });\n\n\tstory1 = new Story({\n\t\t\tprops: { name: \"Active\", args: { active: true } }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(meta.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(template.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(story0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(story1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(meta, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(template, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(story0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(story1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst template_changes = {};\n\n\t\t\tif (dirty & /*$$scope, args*/ 3) {\n\t\t\t\ttemplate_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttemplate.$set(template_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(meta.$$.fragment, local);\n\t\t\ttransition_in(template.$$.fragment, local);\n\t\t\ttransition_in(story0.$$.fragment, local);\n\t\t\ttransition_in(story1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(meta.$$.fragment, local);\n\t\t\ttransition_out(template.$$.fragment, local);\n\t\t\ttransition_out(story0.$$.fragment, local);\n\t\t\ttransition_out(story1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(meta, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(template, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(story0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(story1, detaching);\n\t\t}\n\t};\n}\n\nclass TriggerSet_stories extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\n//export defaultTriggerSet_stories;\nTriggerSet_stories.__docgen = {\"version\":3,\"name\":\"TriggerSet.stories.svelte\",\"data\":[],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};\nconst { default: parser } = require('/Users/johngruen/Repos/vite-test-svelte/node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js');\nconst __storiesMetaData = parser(TriggerSet_stories, {\"tpl:default\":{\"name\":\"default\",\"template\":true,\"source\":\"<Trigger {...args} />\",\"hasArgs\":true},\"Default\":{\"name\":\"Default\",\"template\":false,\"hasArgs\":false},\"Active\":{\"name\":\"Active\",\"template\":false,\"hasArgs\":false}});\nexport default __storiesMetaData.meta;\nexport const Default = __storiesMetaData.stories[\"Default\"]\nexport const Active = __storiesMetaData.stories[\"Active\"];"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1GA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAgjKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAivOA;AAAA;AAAA;AAAA;AAAA;AAcrHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgzKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAimzPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiezHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAggsourceRoot":""}