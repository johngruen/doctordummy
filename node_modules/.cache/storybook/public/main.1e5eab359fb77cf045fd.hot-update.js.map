{"version":3,"file":"main.1e5eab359fb77cf045fd.hot-update.js","sources":["webpack:///./src/lib/Trigger.svelte"],"sourcesContent":["/* src/lib/Trigger.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tnoop,\n\tnull_to_empty,\n\tsafe_not_equal\n} from \"svelte/internal\";\n\nfunction add_css() {\n\tvar style = element(\"style\");\n\tstyle.id = \"svelte-1s4madb-style\";\n\tstyle.textContent = \".outer.svelte-1s4madb.svelte-1s4madb{width:72px;height:72px;display:flex;align-items:center;justify-content:center;background:#fff}.inner.svelte-1s4madb.svelte-1s4madb{height:24px;width:24px;background:var(--bg-color);border-radius:50%;transition:background-color 75ms}.on.svelte-1s4madb .inner.svelte-1s4madb{background:rgb(211, 165, 165)}.active.svelte-1s4madb .inner.svelte-1s4madb{background:#ff0}.dominant.svelte-1s4madb .inner.svelte-1s4madb{width:32px;height:32px}\";\n\tappend(document.head, style);\n}\n\nfunction create_fragment(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet div1_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"inner svelte-1s4madb\");\n\t\t\tattr(div1, \"class\", div1_class_value = \"\" + (null_to_empty(/*classList*/ ctx[0]) + \" svelte-1s4madb\"));\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(div1, \"click\", /*handleClick*/ ctx[1]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*classList*/ 1 && div1_class_value !== (div1_class_value = \"\" + (null_to_empty(/*classList*/ ctx[0]) + \" svelte-1s4madb\"))) {\n\t\t\t\tattr(div1, \"class\", div1_class_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet classList;\n\tlet { active = false } = $$props;\n\tlet { on = false } = $$props;\n\tlet { dominant = false } = $$props;\n\n\tconst handleClick = () => {\n\t\t$$invalidate(2, on = !on);\n\t\tconsole.log(on);\n\t};\n\n\t$$self.$$set = $$props => {\n\t\tif (\"active\" in $$props) $$invalidate(3, active = $$props.active);\n\t\tif (\"on\" in $$props) $$invalidate(2, on = $$props.on);\n\t\tif (\"dominant\" in $$props) $$invalidate(4, dominant = $$props.dominant);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*on, active, dominant*/ 28) {\n\t\t\t$: $$invalidate(0, classList = [\n\t\t\t\t\"outer\",\n\t\t\t\ton ? \"on\" : \"\",\n\t\t\t\tactive ? \"active\" : \"\",\n\t\t\t\tdominant ? \"dominant\" : \"\"\n\t\t\t].join(\" \"));\n\t\t}\n\t};\n\n\treturn [classList, handleClick, on, active, dominant];\n}\n\nclass Trigger extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!document.getElementById(\"svelte-1s4madb-style\")) add_css();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { active: 3, on: 2, dominant: 4 });\n\t}\n}\n\nexport default Trigger;\nTrigger.__docgen = {\"version\":3,\"name\":\"Trigger.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"active\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"on\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"dominant\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"boolean\",\"type\":\"boolean\"},\"defaultValue\":false}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}